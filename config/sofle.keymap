/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define LOWER_MACOS 4
#define RAISE_MACOS 5

/ {
    // Tri-state behavior for OS mode switching

    behaviors {
        os_mode_toggle: os_mode_toggle {
            compatible = "zmk,behavior-tri-state";
            label = "OS_MODE_TOGGLE";
            #binding-cells = <0>;
            bindings = <&tog LOWER_MACOS>, <&tog RAISE_MACOS>, <&none>;

            ignored-key-positions = <>;
            ignored-layers = <>;
        };

        // Conditional layer access based on OS mode

        lower_conditional: lower_conditional {
            compatible = "zmk,behavior-mod-morph";
            label = "LOWER_CONDITIONAL";
            #binding-cells = <0>;
            bindings = <&mo LOWER>, <&mo LOWER_MACOS>;


        };

        raise_conditional: raise_conditional {
            compatible = "zmk,behavior-mod-morph";
            label = "RAISE_CONDITIONAL";
            #binding-cells = <0>;
            bindings = <&mo RAISE>, <&mo RAISE_MACOS>;


        };
    };

    // Conditional layers

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };

        adjust_macos_layer {
            if-layers = <LOWER_MACOS RAISE_MACOS>;
            then-layer = <ADJUST>;
        };
    };

    // Macros for Brazilian Portuguese accents

    macros {
        // Linux (AltGr) accent macros

        linux_a_acute: linux_a_acute {
            label = "linux_a_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(A)>;
        };

        linux_a_tilde: linux_a_tilde {
            label = "linux_a_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(N6)) &kp A>;
        };

        linux_e_acute: linux_e_acute {
            label = "linux_e_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E)>;
        };

        linux_e_circumflex: linux_e_circumflex {
            label = "linux_e_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(N6)) &kp E>;
        };

        linux_i_acute: linux_i_acute {
            label = "linux_i_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(I)>;
        };

        linux_o_acute: linux_o_acute {
            label = "linux_o_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(O)>;
        };

        linux_o_circumflex: linux_o_circumflex {
            label = "linux_o_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(N6)) &kp O>;
        };

        linux_o_tilde: linux_o_tilde {
            label = "linux_o_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(GRAVE)) &kp O>;
        };

        linux_u_acute: linux_u_acute {
            label = "linux_u_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(U)>;
        };

        linux_c_cedilla: linux_c_cedilla {
            label = "linux_c_cedilla";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(COMMA)>;
        };

        // macOS accent macros

        macos_a_acute: macos_a_acute {
            label = "macos_a_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
        };

        macos_a_tilde: macos_a_tilde {
            label = "macos_a_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp A>;
        };

        macos_e_acute: macos_e_acute {
            label = "macos_e_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
        };

        macos_e_circumflex: macos_e_circumflex {
            label = "macos_e_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
        };

        macos_i_acute: macos_i_acute {
            label = "macos_i_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I>;
        };

        macos_o_acute: macos_o_acute {
            label = "macos_o_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O>;
        };

        macos_o_circumflex: macos_o_circumflex {
            label = "macos_o_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
        };

        macos_o_tilde: macos_o_tilde {
            label = "macos_o_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp O>;
        };

        macos_u_acute: macos_u_acute {
            label = "macos_u_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U>;
        };

        macos_c_cedilla: macos_c_cedilla {
            label = "macos_c_cedilla";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(C)>;
        };
    };

    // Combos for accent input and OS mode toggle

    combos {
        compatible = "zmk,combos";

        // Linux accent combos on lower layer

        combo_a_tilde {
            timeout-ms = <50>;
            key-positions = <26 25>; // A + S on lower layer
            bindings = <&linux_a_tilde>;
            layers = <1>;
        };

        combo_e_circumflex {
            timeout-ms = <50>;
            key-positions = <15 16>; // E + R on lower layer
            bindings = <&linux_e_circumflex>;
            layers = <1>;
        };

        combo_o_tilde {
            timeout-ms = <50>;
            key-positions = <21 22>; // O + M on raise layer
            bindings = <&linux_o_tilde>;
            layers = <2>;
        };

        // macOS accent combos on macOS layers

        combo_macos_a_tilde {
            timeout-ms = <50>;
            key-positions = <26 25>; // A + S
            bindings = <&macos_a_tilde>;
            layers = <4>;
            require-prior-idle-ms = <150>;
        };

        combo_macos_e_circumflex {
            timeout-ms = <50>;
            key-positions = <15 16>; // E + R
            bindings = <&macos_e_circumflex>;
            layers = <4>;
            require-prior-idle-ms = <150>;
        };

        combo_macos_o_tilde {
            timeout-ms = <50>;
            key-positions = <21 22>; // O + M
            bindings = <&macos_o_tilde>;
            layers = <5>;
            require-prior-idle-ms = <150>;
        };

        // OS mode toggle combo - letter M on adjust layer
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4              &kp N5                             &kp N6     &kp N7              &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E     &kp R               &kp T                              &kp Y      &kp U               &kp I      &kp O     &kp P     &kp EQUAL
&kp LSHFT  &kp A   &kp S     &kp D     &kp F               &kp G                              &kp H      &kp J               &kp K      &kp L     &kp SEMI  &kp COLON
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V               &kp B      &kp C_MUTE    &kp C_PP  &kp N      &kp M               &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
                   &kp LGUI  &kp LALT  &raise_conditional  &kp SPACE  &kp RET       &kp BSPC  &kp SPACE  &lower_conditional  &kp LBKT   &kp RBKT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        lower_layer {
            label = "lower";
            bindings = <
&studio_unlock  &kp F1          &kp F2  &kp F3            &kp F4  &kp F5                    &kp F6  &kp F7          &kp F8          &kp F9               &kp F10  &kp F11
&trans          &trans          &trans  &linux_e_acute    &trans  &trans                    &trans  &linux_u_acute  &linux_i_acute  &linux_o_circumflex  &trans   &kp F12
&trans          &linux_a_acute  &trans  &trans            &trans  &trans                    &trans  &trans          &trans          &trans               &trans   &trans
&trans          &trans          &trans  &linux_c_cedilla  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans               &trans   &trans
                                &trans  &trans            &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &trans          &trans          &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &linux_u_acute  &linux_i_acute  &linux_o_acute  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp LEFT   &kp DOWN        &kp UP          &kp RIGHT       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans   &kp PG_DN  &kp PG_UP       &kp HOME        &kp END         &trans  &trans
                &trans  &trans  &trans  &trans  &kp BSPC    &kp DEL  &trans     &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        adjust_layer {
            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none            &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none            &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none            &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &os_mode_toggle  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none            &none  &none
            >;
        };

        lower_macos_layer {
            label = "lower_mac";
            bindings = <
&studio_unlock  &kp F1          &kp F2  &kp F3            &kp F4  &kp F5                    &kp F6  &kp F7          &kp F8          &kp F9               &kp F10  &kp F11
&trans          &trans          &trans  &macos_e_acute    &trans  &trans                    &trans  &macos_u_acute  &macos_i_acute  &macos_o_circumflex  &trans   &kp F12
&trans          &macos_a_acute  &trans  &trans            &trans  &trans                    &trans  &trans          &trans          &trans               &trans   &trans
&trans          &trans          &trans  &macos_c_cedilla  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans               &trans   &trans
                                &trans  &trans            &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_macos_layer {
            label = "raise_mac";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &trans          &trans          &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &macos_u_acute  &macos_i_acute  &macos_o_acute  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp LEFT   &kp DOWN        &kp UP          &kp RIGHT       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans   &kp PG_DN  &kp PG_UP       &kp HOME        &kp END         &trans  &trans
                &trans  &trans  &trans  &trans  &kp BSPC    &kp DEL  &trans     &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };
    };
};
