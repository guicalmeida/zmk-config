/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Import Unicode behavior

#include <behaviors/unicode.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// Configure Unicode behavior for Linux

&uc {
    default-mode = <UC_MODE_LINUX>;  // Use Linux IBus mode
    linux-key = <LC(LS(U))>;         // Ctrl+Shift+U (default, but explicit)
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define ACCENT 4

/ {
    // Conditional layers

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    // Macros

    macros {
        // Hyper key

        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LCTRL &kp LALT &kp LGUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;

            label = "HYPER";
        };
    };

    // Combos

    combos {
        compatible = "zmk,combos";

        enter_right {
            bindings = <&kp RET>;
            key-positions = <55 56>;
            layers = <0 1>;
            timeout-ms = <75>;
        };

        enter_left {
            bindings = <&kp RET>;
            key-positions = <53 54>;
            layers = <0 1>;
            timeout-ms = <75>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4  &kp N5                               &kp N6     &kp N7            &kp N8             &kp N9     &kp N0            &kp EQUAL
&kp TAB    &kp Q   &kp W     &kp E     &kp R   &kp T                                &kp Y      &kp U             &kp I              &kp O      &kp P             &kp MINUS
&kp LSHFT  &kp A   &kp S     &kp D     &kp F   &kp G                                &kp H      &kp J             &kp K              &kp L      &kp SINGLE_QUOTE  &kp SEMI
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V   &kp B   &kp PRINTSCREEN    &tog 2    &kp N      &kp M             &kp COMMA          &kp DOT    &kp FSLH          &kp BSLH
                   &kp LGUI  &kp LALT  &hyper  &mo 3   &mo 1              &kp BSPC  &kp SPACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>, <&inc_dec_kp UP DOWN>;
        };

        Nav {
            label = "nav";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                        &trans    &trans         &trans     &trans     &trans  &trans
&trans  &trans    &kp UP    &trans     &kp PG_UP  &kp HOME                      &trans    &trans         &trans     &trans     &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &kp END                       &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans  &trans
&trans  &trans    &trans    &trans     &trans     &trans     &trans    &trans   &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &trans  &trans
                  &trans    &trans     &trans     &kp SPACE  &trans    &kp DEL  &trans    &trans         &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Num {
            bindings = <
&kp F1                 &kp F2     &kp F3  &kp F4  &kp F5  &kp F6                                   &kp F7        &kp F8  &kp F9                &kp F10                &kp F11    &kp F12
&kp LEFT_PARENTHESIS   &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp ASTERISK                             &kp ASTERISK  &kp N7  &kp N8                &kp N9                 &kp EQUAL  &kp PERCENT
&kp RIGHT_PARENTHESIS  &kp PLUS   &kp N4  &kp N5  &kp N6  &kp SLASH                                &kp FSLH      &kp N4  &kp N5                &kp N6                 &kp PLUS   &kp DOLLAR
&trans                 &kp MINUS  &kp N1  &kp N2  &kp N3  &kp COMMA     &trans           &trans    &kp DOT       &kp N1  &kp N2                &kp N3                 &kp MINUS  &kp EXCL
                                  &trans  &trans  &kp N0  &kp ENTER     &kp BACKSPACE    &kp BSPC  &kp SPACE     &kp N0  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;

            label = "num";
        };

        accent_layer {
            label = "accent";
            bindings = <
&trans  &uc 0xE2 0xC2  &trans  &trans         &trans  &trans                            &trans  &trans         &trans         &uc 0xF4 0xD4  &trans  &trans
&trans  &uc 0xE3 0xC3  &trans  &uc 0xE9 0xC9  &trans  &trans                            &trans  &uc 0xFA 0xDA  &uc 0xED 0xCD  &uc 0xF3 0xD3  &trans  &trans
&trans  &uc 0xE1 0xC1  &trans  &uc 0xEA 0xCA  &trans  &trans                            &trans  &trans         &trans         &uc 0xF5 0xD5  &trans  &trans
&trans  &uc 0xE0 0xC0  &trans  &uc 0xE7 0xC7  &trans  &trans  &trans    &trans          &trans  &trans         &trans         &trans         &trans  &trans
                       &trans  &trans         &trans  &trans  &trans    &kp LEFT_SHIFT  &trans  &trans         &trans         &trans
            >;
        };

        adjust_layer {
            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none   &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none   &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none   &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &trans  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none   &none  &none
            >;
        };
    };
};
