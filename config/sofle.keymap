/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Tri-state behavior for OS mode switching
    // Conditional layers

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    // Macros for Brazilian Portuguese accents

    macros {
        // Linux (AltGr) accent macros

        linux_a_acute: linux_a_acute {
            label = "linux_a_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(A)>;
        };

        linux_a_circumflex: linux_a_tilde {
            label = "linux_a_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N6) &kp A>;
        };

        linux_e_acute: linux_e_acute {
            label = "linux_e_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E)>;
        };

        linux_e_circumflex: linux_e_circumflex {
            label = "linux_e_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N6) &kp E>;
        };

        linux_i_acute: linux_i_acute {
            label = "linux_i_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(I)>;
        };

        linux_o_acute: linux_o_acute {
            label = "linux_o_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(O)>;
        };

        linux_o_circumflex: linux_o_circumflex {
            label = "linux_o_circumflex";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N6) &kp O>;
        };

        linux_o_tilde: linux_o_tilde {
            label = "linux_o_tilde";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(GRAVE)) &kp O>;
        };

        linux_u_acute: linux_u_acute {
            label = "linux_u_acute";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(U)>;
        };

        linux_c_cedilla: linux_c_cedilla {
            label = "linux_c_cedilla";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(COMMA)>;
        };

        linux_a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            label = "A_TILDE";
            #binding-cells = <0>;
            bindings = <&kp RA(LS(GRAVE)) &kp A>;
        };

        linux_a_grave: linux_a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(GRAVE) &kp A>;
            label = "LINUX_A_GRAVE";
        };
    };

    // Combos for accent input and OS mode toggle

    combos {
        compatible = "zmk,combos";

        // Linux accent combos on lower layer

        combo_a_circumflex {
            timeout-ms = <50>;
            key-positions = <25 33>; // A + S on lower layer
            bindings = <&linux_a_circumflex>;
            layers = <0>;
        };

        combo_e_circumflex {
            timeout-ms = <50>;
            key-positions = <15 33>; // E + R on lower layer
            bindings = <&linux_e_circumflex>;
            layers = <0>;
        };

        combo_o_tilde {
            timeout-ms = <50>;
            key-positions = <21 27>; // O + M on raise layer
            bindings = <&linux_o_tilde>;
            layers = <0>;
        };

        // macOS accent combos on macOS layers

        combo_a_acute {
            bindings = <&linux_a_acute>;
            key-positions = <31 25>;
            layers = <0>;
        };

        combo_e_acute {
            bindings = <&linux_e_acute>;
            key-positions = <15 31>;
            layers = <0>;
        };

        combo_i_acute {
            bindings = <&linux_i_acute>;
            key-positions = <20 28>;
            layers = <0>;
        };

        combo_u_acute {
            bindings = <&linux_u_acute>;
            key-positions = <19 28>;
            layers = <0>;
        };

        combo_cedilla {
            bindings = <&linux_c_cedilla>;
            key-positions = <39 31>;
            layers = <0>;
        };

        combo_a_tilde {
            bindings = <&linux_a_tilde>;
            key-positions = <25 32>;
            layers = <0>;
        };

        combo_a_grave {
            bindings = <&linux_a_grave>;
            key-positions = <25 34>;
            layers = <0>;
        };

        combo_o_acute {
            bindings = <&linux_o_acute>;
            key-positions = <21 28>;
            layers = <0>;
        };

        combo_o_circumflex {
            bindings = <&linux_o_circumflex>;
            key-positions = <21 26>;
            layers = <0>;
        };

        // OS mode toggle combo - letter M on adjust layer
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4  &kp N5                             &kp N6     &kp N7  &kp N8     &kp N9    &kp N0            &kp EQUAL
&kp TAB    &kp Q   &kp W     &kp E     &kp R   &kp T                              &kp Y      &kp U   &kp I      &kp O     &kp P             &kp MINUS
&kp LSHFT  &kp A   &kp S     &kp D     &kp F   &kp G                              &kp H      &kp J   &kp K      &kp L     &kp SINGLE_QUOTE  &kp SEMI
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V   &kp B      &kp C_MUTE    &kp C_PP  &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH          &kp BSLH
                   &kp LGUI  &kp LALT  &mo 2   &kp SPACE  &kp RET       &kp BSPC  &kp SPACE  &mo 1   &kp LBKT   &kp RBKT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        lower_layer {
            label = "lower";
            bindings = <
&studio_unlock  &kp F1           &kp F2  &kp F3    &kp F4      &kp F5                                  &kp F6     &kp F7    &kp F8     &kp F9                &kp F10                &kp F11
&trans          &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                             &kp CARET  &kt AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F12
&trans          &trans           &trans  &trans    &trans      &trans                                  &trans     &trans    &trans     &trans                &trans                 &trans
&trans          &trans           &trans  &trans    &trans      &trans       &kp PRINTSCREEN    &trans  &trans     &trans    &trans     &trans                &trans                 &trans
                                 &trans  &trans    &trans      &trans       &trans             &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &trans     &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &trans     &trans    &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &kp GRAVE  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans   &kp PG_DN  &kp PG_UP  &kp HOME  &kp END    &kp TILDE  &trans
                &trans  &trans  &trans  &trans  &kp BSPC    &kp DEL  &trans     &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp UP DOWN>;
        };

        adjust_layer {
            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none   &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none   &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none   &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &trans  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none   &none  &none
            >;
        };
    };
};
